name: Node.js CI

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'

    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

    - name: Docker Login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker images
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:latest
          ${{ secrets.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:${{ github.run_number }}
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v3
        with:
          # Required, playbook filepath
          playbook: deploy.yml
          # Optional, directory where playbooks live
          directory: ./playbooks
          # Optional, SSH private key
          key: ${{secrets.SSH_PRIVATE_KEY}}
          # Optional, literal inventory file contents
          inventory: |
            [all]
            server ansible_host=${{ vars.SSH_HOST }} ansible_user=${{ vars.SSH_USER }}

          # Optional, additional flags to pass to ansible-playbook
          options: |
            --inventory .hosts
            --extra-vars "image_name=${{ secrets.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}"
            --extra-vars "domain_name=${{ vars.DOMAIN_NAME }}"
            --extra-vars "ansible_ssh_common_args='-o StrictHostKeyChecking=no'"
            --verbose